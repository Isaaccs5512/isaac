/* soapxiaofangService.cpp
   Generated by gSOAP 2.8.17r from webservice.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapxiaofangService.h"

xiaofangService::xiaofangService()
{	xiaofangService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

xiaofangService::xiaofangService(const struct soap &_soap) : soap(_soap)
{ }

xiaofangService::xiaofangService(soap_mode iomode)
{	xiaofangService_init(iomode, iomode);
}

xiaofangService::xiaofangService(soap_mode imode, soap_mode omode)
{	xiaofangService_init(imode, omode);
}

xiaofangService::~xiaofangService()
{ }

void xiaofangService::xiaofangService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns", "urn:xiaofang", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void xiaofangService::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void xiaofangService::reset()
{	destroy();
	soap_done(this);
	soap_initialize(this);
	xiaofangService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
xiaofangService *xiaofangService::copy()
{	xiaofangService *dup = SOAP_NEW_COPY(xiaofangService(*(struct soap*)this));
	return dup;
}
#endif

int xiaofangService::soap_close_socket()
{	return soap_closesock(this);
}

int xiaofangService::soap_force_close_socket()
{	return soap_force_closesock(this);
}

int xiaofangService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this, string, detailXML);
}

int xiaofangService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this, subcodeQName, string, detailXML);
}

int xiaofangService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this, string, detailXML);
}

int xiaofangService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this, subcodeQName, string, detailXML);
}

void xiaofangService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void xiaofangService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *xiaofangService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

void xiaofangService::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *xiaofangService::soap_header()
{	return this->header;
}

int xiaofangService::run(int port)
{	if (soap_valid_socket(this->master) || soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()) || serve())
				return this->error;
			soap_destroy(this);
			soap_end(this);
		}
	}
	else
		return this->error;
	return SOAP_OK;
}

SOAP_SOCKET xiaofangService::bind(const char *host, int port, int backlog)
{	return soap_bind(this, host, port, backlog);
}

SOAP_SOCKET xiaofangService::accept()
{	return soap_accept(this);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int xiaofangService::ssl_accept()
{	return soap_ssl_accept(this);
}
#endif

int xiaofangService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->max_keep_alive;
#endif
	do
	{

#ifndef WITH_FASTCGI
		if (this->max_keep_alive > 0 && !--k)
			this->keep_alive = 0;
#endif

		if (soap_begin_serve(this))
		{	if (this->error >= SOAP_STOP)
				continue;
			return this->error;
		}
		if (dispatch() || (this->fserveloop && this->fserveloop(this)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this);
#else
			return soap_send_fault(this);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this);
		soap_end(this);
	} while (1);
#else
	} while (this->keep_alive);
#endif
	return SOAP_OK;
}

static int serve_ns__Dispatch_Login(xiaofangService*);
static int serve_ns__Dispatch_Logout(xiaofangService*);
static int serve_ns__Dispatch_Entity_Request(xiaofangService*);
static int serve_ns__Dispatch_Entity_Nofitication(xiaofangService*);
static int serve_ns__Dispatch_Append_Group(xiaofangService*);
static int serve_ns__Dispatch_Modify_Group(xiaofangService*);
static int serve_ns__Dispatch_Modify_Participants(xiaofangService*);
static int serve_ns__Dispatch_Delete_Group(xiaofangService*);
static int serve_ns__Dispatch_Dispatch_Participants_Notification(xiaofangService*);
static int serve_ns__Dispatch_Join_Group_Request_Nofitication(xiaofangService*);
static int serve_ns__Dispatch_Participant_Status_Notification(xiaofangService*);
static int serve_ns__Dispatch_Media_Message_Request(xiaofangService*);
static int serve_ns__Dispatch_Media_Message_Notification(xiaofangService*);
static int serve_ns__Dispatch_Participant_Connect_Request_Notification(xiaofangService*);
static int serve_ns__Dispatch_Participant_Speak_Request_Notification(xiaofangService*);
static int serve_ns__Dispatch_Invite_Participant_Request(xiaofangService*);
static int serve_ns__Dispatch_Drop_Participant_Request(xiaofangService*);
static int serve_ns__Dispatch_Release_Participant_Token_Request(xiaofangService*);
static int serve_ns__Dispatch_Appoint_Participant_Speak_Request(xiaofangService*);
static int serve_ns__Dispatch_Jion_Group_Request(xiaofangService*);
static int serve_ns__Dispatch_Leave_Group_Request(xiaofangService*);
static int serve_ns__Dispatch_Session_Status_Notification(xiaofangService*);
static int serve_ns__Dispatch_Send_Message_Request(xiaofangService*);
static int serve_ns__Dispatch_Start_Record_Request(xiaofangService*);
static int serve_ns__Dispatch_Stop_Record_Request(xiaofangService*);
static int serve_ns__Dispatch_Record_Status_Notification(xiaofangService*);
static int serve_ns__Dispatch_Subscribe_Account_Info_Request(xiaofangService*);
static int serve_ns__Dispatch_Account_Info_Notification(xiaofangService*);
static int serve_ns__Dispatch_Append_Alert_Request(xiaofangService*);
static int serve_ns__Dispatch_Modify_Alert_Request(xiaofangService*);
static int serve_ns__Dispatch_Stop_Alert_Request(xiaofangService*);
static int serve_ns__Dispatch_Alert_Overed_Notification(xiaofangService*);
static int serve_ns__Dispatch_History_Alert_Request(xiaofangService*);
static int serve_ns__Dispatch_Alert_Request(xiaofangService*);
static int serve_ns__Dispatch_History_Alert_Message_Request(xiaofangService*);
static int serve_ns__Dispatch_Delete_History_Alert_Request(xiaofangService*);

int xiaofangService::dispatch()
{	soap_peek_element(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Login"))
		return serve_ns__Dispatch_Login(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Logout"))
		return serve_ns__Dispatch_Logout(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Entity-Request"))
		return serve_ns__Dispatch_Entity_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Entity-Nofitication"))
		return serve_ns__Dispatch_Entity_Nofitication(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Append-Group"))
		return serve_ns__Dispatch_Append_Group(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Modify-Group"))
		return serve_ns__Dispatch_Modify_Group(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Modify-Participants"))
		return serve_ns__Dispatch_Modify_Participants(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Delete-Group"))
		return serve_ns__Dispatch_Delete_Group(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Dispatch-Participants-Notification"))
		return serve_ns__Dispatch_Dispatch_Participants_Notification(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Join-Group-Request-Nofitication"))
		return serve_ns__Dispatch_Join_Group_Request_Nofitication(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Participant-Status-Notification"))
		return serve_ns__Dispatch_Participant_Status_Notification(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Media-Message-Request"))
		return serve_ns__Dispatch_Media_Message_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Media-Message-Notification"))
		return serve_ns__Dispatch_Media_Message_Notification(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Participant-Connect-Request-Notification"))
		return serve_ns__Dispatch_Participant_Connect_Request_Notification(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Participant-Speak-Request-Notification"))
		return serve_ns__Dispatch_Participant_Speak_Request_Notification(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Invite-Participant-Request"))
		return serve_ns__Dispatch_Invite_Participant_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Drop-Participant-Request"))
		return serve_ns__Dispatch_Drop_Participant_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Release-Participant-Token-Request"))
		return serve_ns__Dispatch_Release_Participant_Token_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Appoint-Participant-Speak-Request"))
		return serve_ns__Dispatch_Appoint_Participant_Speak_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Jion-Group-Request"))
		return serve_ns__Dispatch_Jion_Group_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Leave-Group-Request"))
		return serve_ns__Dispatch_Leave_Group_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Session-Status-Notification"))
		return serve_ns__Dispatch_Session_Status_Notification(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Send-Message-Request"))
		return serve_ns__Dispatch_Send_Message_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Start-Record-Request"))
		return serve_ns__Dispatch_Start_Record_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Stop-Record-Request"))
		return serve_ns__Dispatch_Stop_Record_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Record-Status-Notification"))
		return serve_ns__Dispatch_Record_Status_Notification(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Subscribe-Account-Info-Request"))
		return serve_ns__Dispatch_Subscribe_Account_Info_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Account-Info-Notification"))
		return serve_ns__Dispatch_Account_Info_Notification(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Append-Alert-Request"))
		return serve_ns__Dispatch_Append_Alert_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Modify-Alert-Request"))
		return serve_ns__Dispatch_Modify_Alert_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Stop-Alert-Request"))
		return serve_ns__Dispatch_Stop_Alert_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Alert-Overed-Notification"))
		return serve_ns__Dispatch_Alert_Overed_Notification(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-History-Alert-Request"))
		return serve_ns__Dispatch_History_Alert_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Alert-Request"))
		return serve_ns__Dispatch_Alert_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-History-Alert-Message-Request"))
		return serve_ns__Dispatch_History_Alert_Message_Request(this);
	if (!soap_match_tag(this, this->tag, "ns:Dispatch-Delete-History-Alert-Request"))
		return serve_ns__Dispatch_Delete_History_Alert_Request(this);
	return this->error = SOAP_NO_METHOD;
}

static int serve_ns__Dispatch_Login(xiaofangService *soap)
{	struct ns__Dispatch_Login soap_tmp_ns__Dispatch_Login;
	ns__Dispatch_Login_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Login(soap, &soap_tmp_ns__Dispatch_Login);
	if (!soap_get_ns__Dispatch_Login(soap, &soap_tmp_ns__Dispatch_Login, "ns:Dispatch-Login", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Login(soap_tmp_ns__Dispatch_Login.username, soap_tmp_ns__Dispatch_Login.password, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Login-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Login-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Logout(xiaofangService *soap)
{	struct ns__Dispatch_Logout soap_tmp_ns__Dispatch_Logout;
	ns__Normal_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Logout(soap, &soap_tmp_ns__Dispatch_Logout);
	if (!soap_get_ns__Dispatch_Logout(soap, &soap_tmp_ns__Dispatch_Logout, "ns:Dispatch-Logout", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Logout(soap_tmp_ns__Dispatch_Logout.session_id, soap_tmp_ns__Dispatch_Logout.name, soap_tmp_ns__Dispatch_Logout.password, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Normal-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Normal-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Entity_Request(xiaofangService *soap)
{	struct ns__Dispatch_Entity_Request soap_tmp_ns__Dispatch_Entity_Request;
	ns__Dispatch_Entity_Request_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Entity_Request(soap, &soap_tmp_ns__Dispatch_Entity_Request);
	if (!soap_get_ns__Dispatch_Entity_Request(soap, &soap_tmp_ns__Dispatch_Entity_Request, "ns:Dispatch-Entity-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Entity_Request(soap_tmp_ns__Dispatch_Entity_Request.session_id, soap_tmp_ns__Dispatch_Entity_Request.id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Entity-Request-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Entity-Request-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Entity_Nofitication(xiaofangService *soap)
{	struct ns__Dispatch_Entity_Nofitication soap_tmp_ns__Dispatch_Entity_Nofitication;
	ns__Dispatch_Entity_Nofitication_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Entity_Nofitication(soap, &soap_tmp_ns__Dispatch_Entity_Nofitication);
	if (!soap_get_ns__Dispatch_Entity_Nofitication(soap, &soap_tmp_ns__Dispatch_Entity_Nofitication, "ns:Dispatch-Entity-Nofitication", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Entity_Nofitication(soap_tmp_ns__Dispatch_Entity_Nofitication.session_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Entity-Nofitication-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Entity-Nofitication-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Append_Group(xiaofangService *soap)
{	struct ns__Dispatch_Append_Group soap_tmp_ns__Dispatch_Append_Group;
	ns__Dispatch_Append_Group_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Append_Group(soap, &soap_tmp_ns__Dispatch_Append_Group);
	if (!soap_get_ns__Dispatch_Append_Group(soap, &soap_tmp_ns__Dispatch_Append_Group, "ns:Dispatch-Append-Group", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Append_Group(soap_tmp_ns__Dispatch_Append_Group.session_id, soap_tmp_ns__Dispatch_Append_Group.group, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Append-Group-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Append-Group-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Modify_Group(xiaofangService *soap)
{	struct ns__Dispatch_Modify_Group soap_tmp_ns__Dispatch_Modify_Group;
	ns__Dispatch_Modify_Group_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Modify_Group(soap, &soap_tmp_ns__Dispatch_Modify_Group);
	if (!soap_get_ns__Dispatch_Modify_Group(soap, &soap_tmp_ns__Dispatch_Modify_Group, "ns:Dispatch-Modify-Group", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Modify_Group(soap_tmp_ns__Dispatch_Modify_Group.session_id, soap_tmp_ns__Dispatch_Modify_Group.group, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Modify-Group-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Modify-Group-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Modify_Participants(xiaofangService *soap)
{	struct ns__Dispatch_Modify_Participants soap_tmp_ns__Dispatch_Modify_Participants;
	ns__Dispatch_Modify_Participants_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Modify_Participants(soap, &soap_tmp_ns__Dispatch_Modify_Participants);
	if (!soap_get_ns__Dispatch_Modify_Participants(soap, &soap_tmp_ns__Dispatch_Modify_Participants, "ns:Dispatch-Modify-Participants", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Modify_Participants(soap_tmp_ns__Dispatch_Modify_Participants.session_id, soap_tmp_ns__Dispatch_Modify_Participants.request, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Modify-Participants-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Modify-Participants-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Delete_Group(xiaofangService *soap)
{	struct ns__Dispatch_Delete_Group soap_tmp_ns__Dispatch_Delete_Group;
	ns__Normal_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Delete_Group(soap, &soap_tmp_ns__Dispatch_Delete_Group);
	if (!soap_get_ns__Dispatch_Delete_Group(soap, &soap_tmp_ns__Dispatch_Delete_Group, "ns:Dispatch-Delete-Group", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Delete_Group(soap_tmp_ns__Dispatch_Delete_Group.session_id, soap_tmp_ns__Dispatch_Delete_Group.group_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Normal-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Normal-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Dispatch_Participants_Notification(xiaofangService *soap)
{	struct ns__Dispatch_Dispatch_Participants_Notification soap_tmp_ns__Dispatch_Dispatch_Participants_Notification;
	ns__Dispatch_Dispatch_Participants_Notification_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Dispatch_Participants_Notification(soap, &soap_tmp_ns__Dispatch_Dispatch_Participants_Notification);
	if (!soap_get_ns__Dispatch_Dispatch_Participants_Notification(soap, &soap_tmp_ns__Dispatch_Dispatch_Participants_Notification, "ns:Dispatch-Dispatch-Participants-Notification", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Dispatch_Participants_Notification(soap_tmp_ns__Dispatch_Dispatch_Participants_Notification.session_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Dispatch-Participants-Notification-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Dispatch-Participants-Notification-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Join_Group_Request_Nofitication(xiaofangService *soap)
{	struct ns__Dispatch_Join_Group_Request_Nofitication soap_tmp_ns__Dispatch_Join_Group_Request_Nofitication;
	ns__Dispatch_Join_Group_Request_Nofitication_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Join_Group_Request_Nofitication(soap, &soap_tmp_ns__Dispatch_Join_Group_Request_Nofitication);
	if (!soap_get_ns__Dispatch_Join_Group_Request_Nofitication(soap, &soap_tmp_ns__Dispatch_Join_Group_Request_Nofitication, "ns:Dispatch-Join-Group-Request-Nofitication", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Join_Group_Request_Nofitication(soap_tmp_ns__Dispatch_Join_Group_Request_Nofitication.session_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Join-Group-Request-Nofitication-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Join-Group-Request-Nofitication-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Participant_Status_Notification(xiaofangService *soap)
{	struct ns__Dispatch_Participant_Status_Notification soap_tmp_ns__Dispatch_Participant_Status_Notification;
	ns__Dispatch_Participant_Status_Notification_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Participant_Status_Notification(soap, &soap_tmp_ns__Dispatch_Participant_Status_Notification);
	if (!soap_get_ns__Dispatch_Participant_Status_Notification(soap, &soap_tmp_ns__Dispatch_Participant_Status_Notification, "ns:Dispatch-Participant-Status-Notification", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Participant_Status_Notification(soap_tmp_ns__Dispatch_Participant_Status_Notification.session_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Participant-Status-Notification-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Participant-Status-Notification-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Media_Message_Request(xiaofangService *soap)
{	struct ns__Dispatch_Media_Message_Request soap_tmp_ns__Dispatch_Media_Message_Request;
	ns__Dispatch_Media_Message_Request_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Media_Message_Request(soap, &soap_tmp_ns__Dispatch_Media_Message_Request);
	if (!soap_get_ns__Dispatch_Media_Message_Request(soap, &soap_tmp_ns__Dispatch_Media_Message_Request, "ns:Dispatch-Media-Message-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Media_Message_Request(soap_tmp_ns__Dispatch_Media_Message_Request.session_id, soap_tmp_ns__Dispatch_Media_Message_Request.group_id, soap_tmp_ns__Dispatch_Media_Message_Request.from_message_id, soap_tmp_ns__Dispatch_Media_Message_Request.from_time, soap_tmp_ns__Dispatch_Media_Message_Request.max_message_count, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Media-Message-Request-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Media-Message-Request-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Media_Message_Notification(xiaofangService *soap)
{	struct ns__Dispatch_Media_Message_Notification soap_tmp_ns__Dispatch_Media_Message_Notification;
	ns__Dispatch_Media_Message_Notification_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Media_Message_Notification(soap, &soap_tmp_ns__Dispatch_Media_Message_Notification);
	if (!soap_get_ns__Dispatch_Media_Message_Notification(soap, &soap_tmp_ns__Dispatch_Media_Message_Notification, "ns:Dispatch-Media-Message-Notification", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Media_Message_Notification(soap_tmp_ns__Dispatch_Media_Message_Notification.session_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Media-Message-Notification-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Media-Message-Notification-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Participant_Connect_Request_Notification(xiaofangService *soap)
{	struct ns__Dispatch_Participant_Connect_Request_Notification soap_tmp_ns__Dispatch_Participant_Connect_Request_Notification;
	ns__Dispatch_Participant_Connect_Request_Notification_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Participant_Connect_Request_Notification(soap, &soap_tmp_ns__Dispatch_Participant_Connect_Request_Notification);
	if (!soap_get_ns__Dispatch_Participant_Connect_Request_Notification(soap, &soap_tmp_ns__Dispatch_Participant_Connect_Request_Notification, "ns:Dispatch-Participant-Connect-Request-Notification", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Participant_Connect_Request_Notification(soap_tmp_ns__Dispatch_Participant_Connect_Request_Notification.session_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Participant-Connect-Request-Notification-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Participant-Connect-Request-Notification-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Participant_Speak_Request_Notification(xiaofangService *soap)
{	struct ns__Dispatch_Participant_Speak_Request_Notification soap_tmp_ns__Dispatch_Participant_Speak_Request_Notification;
	ns__Dispatch_Participant_Speak_Request_Notification_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Participant_Speak_Request_Notification(soap, &soap_tmp_ns__Dispatch_Participant_Speak_Request_Notification);
	if (!soap_get_ns__Dispatch_Participant_Speak_Request_Notification(soap, &soap_tmp_ns__Dispatch_Participant_Speak_Request_Notification, "ns:Dispatch-Participant-Speak-Request-Notification", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Participant_Speak_Request_Notification(soap_tmp_ns__Dispatch_Participant_Speak_Request_Notification.session_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Participant-Speak-Request-Notification-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Participant-Speak-Request-Notification-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Invite_Participant_Request(xiaofangService *soap)
{	struct ns__Dispatch_Invite_Participant_Request soap_tmp_ns__Dispatch_Invite_Participant_Request;
	ns__Normal_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Invite_Participant_Request(soap, &soap_tmp_ns__Dispatch_Invite_Participant_Request);
	if (!soap_get_ns__Dispatch_Invite_Participant_Request(soap, &soap_tmp_ns__Dispatch_Invite_Participant_Request, "ns:Dispatch-Invite-Participant-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Invite_Participant_Request(soap_tmp_ns__Dispatch_Invite_Participant_Request.session_id, soap_tmp_ns__Dispatch_Invite_Participant_Request.group_id, soap_tmp_ns__Dispatch_Invite_Participant_Request.account_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Normal-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Normal-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Drop_Participant_Request(xiaofangService *soap)
{	struct ns__Dispatch_Drop_Participant_Request soap_tmp_ns__Dispatch_Drop_Participant_Request;
	ns__Normal_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Drop_Participant_Request(soap, &soap_tmp_ns__Dispatch_Drop_Participant_Request);
	if (!soap_get_ns__Dispatch_Drop_Participant_Request(soap, &soap_tmp_ns__Dispatch_Drop_Participant_Request, "ns:Dispatch-Drop-Participant-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Drop_Participant_Request(soap_tmp_ns__Dispatch_Drop_Participant_Request.session_id, soap_tmp_ns__Dispatch_Drop_Participant_Request.group_id, soap_tmp_ns__Dispatch_Drop_Participant_Request.account_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Normal-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Normal-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Release_Participant_Token_Request(xiaofangService *soap)
{	struct ns__Dispatch_Release_Participant_Token_Request soap_tmp_ns__Dispatch_Release_Participant_Token_Request;
	ns__Normal_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Release_Participant_Token_Request(soap, &soap_tmp_ns__Dispatch_Release_Participant_Token_Request);
	if (!soap_get_ns__Dispatch_Release_Participant_Token_Request(soap, &soap_tmp_ns__Dispatch_Release_Participant_Token_Request, "ns:Dispatch-Release-Participant-Token-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Release_Participant_Token_Request(soap_tmp_ns__Dispatch_Release_Participant_Token_Request.session_id, soap_tmp_ns__Dispatch_Release_Participant_Token_Request.group_id, soap_tmp_ns__Dispatch_Release_Participant_Token_Request.account_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Normal-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Normal-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Appoint_Participant_Speak_Request(xiaofangService *soap)
{	struct ns__Dispatch_Appoint_Participant_Speak_Request soap_tmp_ns__Dispatch_Appoint_Participant_Speak_Request;
	ns__Normal_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Appoint_Participant_Speak_Request(soap, &soap_tmp_ns__Dispatch_Appoint_Participant_Speak_Request);
	if (!soap_get_ns__Dispatch_Appoint_Participant_Speak_Request(soap, &soap_tmp_ns__Dispatch_Appoint_Participant_Speak_Request, "ns:Dispatch-Appoint-Participant-Speak-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Appoint_Participant_Speak_Request(soap_tmp_ns__Dispatch_Appoint_Participant_Speak_Request.session_id, soap_tmp_ns__Dispatch_Appoint_Participant_Speak_Request.group_id, soap_tmp_ns__Dispatch_Appoint_Participant_Speak_Request.account_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Normal-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Normal-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Jion_Group_Request(xiaofangService *soap)
{	struct ns__Dispatch_Jion_Group_Request soap_tmp_ns__Dispatch_Jion_Group_Request;
	ns__Normal_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Jion_Group_Request(soap, &soap_tmp_ns__Dispatch_Jion_Group_Request);
	if (!soap_get_ns__Dispatch_Jion_Group_Request(soap, &soap_tmp_ns__Dispatch_Jion_Group_Request, "ns:Dispatch-Jion-Group-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Jion_Group_Request(soap_tmp_ns__Dispatch_Jion_Group_Request.session_id, soap_tmp_ns__Dispatch_Jion_Group_Request.group_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Normal-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Normal-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Leave_Group_Request(xiaofangService *soap)
{	struct ns__Dispatch_Leave_Group_Request soap_tmp_ns__Dispatch_Leave_Group_Request;
	ns__Normal_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Leave_Group_Request(soap, &soap_tmp_ns__Dispatch_Leave_Group_Request);
	if (!soap_get_ns__Dispatch_Leave_Group_Request(soap, &soap_tmp_ns__Dispatch_Leave_Group_Request, "ns:Dispatch-Leave-Group-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Leave_Group_Request(soap_tmp_ns__Dispatch_Leave_Group_Request.session_id, soap_tmp_ns__Dispatch_Leave_Group_Request.group_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Normal-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Normal-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Session_Status_Notification(xiaofangService *soap)
{	struct ns__Dispatch_Session_Status_Notification soap_tmp_ns__Dispatch_Session_Status_Notification;
	ns__Dispatch_Session_Status_Notification_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Session_Status_Notification(soap, &soap_tmp_ns__Dispatch_Session_Status_Notification);
	if (!soap_get_ns__Dispatch_Session_Status_Notification(soap, &soap_tmp_ns__Dispatch_Session_Status_Notification, "ns:Dispatch-Session-Status-Notification", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Session_Status_Notification(soap_tmp_ns__Dispatch_Session_Status_Notification.session_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Session-Status-Notification-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Session-Status-Notification-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Send_Message_Request(xiaofangService *soap)
{	struct ns__Dispatch_Send_Message_Request soap_tmp_ns__Dispatch_Send_Message_Request;
	ns__Normal_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Send_Message_Request(soap, &soap_tmp_ns__Dispatch_Send_Message_Request);
	if (!soap_get_ns__Dispatch_Send_Message_Request(soap, &soap_tmp_ns__Dispatch_Send_Message_Request, "ns:Dispatch-Send-Message-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Send_Message_Request(soap_tmp_ns__Dispatch_Send_Message_Request.session_id, soap_tmp_ns__Dispatch_Send_Message_Request.group_id, soap_tmp_ns__Dispatch_Send_Message_Request.mediamessage, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Normal-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Normal-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Start_Record_Request(xiaofangService *soap)
{	struct ns__Dispatch_Start_Record_Request soap_tmp_ns__Dispatch_Start_Record_Request;
	ns__Normal_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Start_Record_Request(soap, &soap_tmp_ns__Dispatch_Start_Record_Request);
	if (!soap_get_ns__Dispatch_Start_Record_Request(soap, &soap_tmp_ns__Dispatch_Start_Record_Request, "ns:Dispatch-Start-Record-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Start_Record_Request(soap_tmp_ns__Dispatch_Start_Record_Request.session_id, soap_tmp_ns__Dispatch_Start_Record_Request.group_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Normal-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Normal-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Stop_Record_Request(xiaofangService *soap)
{	struct ns__Dispatch_Stop_Record_Request soap_tmp_ns__Dispatch_Stop_Record_Request;
	ns__Normal_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Stop_Record_Request(soap, &soap_tmp_ns__Dispatch_Stop_Record_Request);
	if (!soap_get_ns__Dispatch_Stop_Record_Request(soap, &soap_tmp_ns__Dispatch_Stop_Record_Request, "ns:Dispatch-Stop-Record-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Stop_Record_Request(soap_tmp_ns__Dispatch_Stop_Record_Request.session_id, soap_tmp_ns__Dispatch_Stop_Record_Request.group_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Normal-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Normal-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Record_Status_Notification(xiaofangService *soap)
{	struct ns__Dispatch_Record_Status_Notification soap_tmp_ns__Dispatch_Record_Status_Notification;
	ns__Dispatch_Record_Status_Notification_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Record_Status_Notification(soap, &soap_tmp_ns__Dispatch_Record_Status_Notification);
	if (!soap_get_ns__Dispatch_Record_Status_Notification(soap, &soap_tmp_ns__Dispatch_Record_Status_Notification, "ns:Dispatch-Record-Status-Notification", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Record_Status_Notification(soap_tmp_ns__Dispatch_Record_Status_Notification.session_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Record-Status-Notification-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Record-Status-Notification-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Subscribe_Account_Info_Request(xiaofangService *soap)
{	struct ns__Dispatch_Subscribe_Account_Info_Request soap_tmp_ns__Dispatch_Subscribe_Account_Info_Request;
	ns__Normal_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Subscribe_Account_Info_Request(soap, &soap_tmp_ns__Dispatch_Subscribe_Account_Info_Request);
	if (!soap_get_ns__Dispatch_Subscribe_Account_Info_Request(soap, &soap_tmp_ns__Dispatch_Subscribe_Account_Info_Request, "ns:Dispatch-Subscribe-Account-Info-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Subscribe_Account_Info_Request(soap_tmp_ns__Dispatch_Subscribe_Account_Info_Request.session_id, soap_tmp_ns__Dispatch_Subscribe_Account_Info_Request.subscribing, soap_tmp_ns__Dispatch_Subscribe_Account_Info_Request.account_id, soap_tmp_ns__Dispatch_Subscribe_Account_Info_Request.type, soap_tmp_ns__Dispatch_Subscribe_Account_Info_Request.ttl, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Normal-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Normal-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Account_Info_Notification(xiaofangService *soap)
{	struct ns__Dispatch_Account_Info_Notification soap_tmp_ns__Dispatch_Account_Info_Notification;
	ns__Dispatch_Account_Info_Notification_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Account_Info_Notification(soap, &soap_tmp_ns__Dispatch_Account_Info_Notification);
	if (!soap_get_ns__Dispatch_Account_Info_Notification(soap, &soap_tmp_ns__Dispatch_Account_Info_Notification, "ns:Dispatch-Account-Info-Notification", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Account_Info_Notification(soap_tmp_ns__Dispatch_Account_Info_Notification.session_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Account-Info-Notification-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Account-Info-Notification-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Append_Alert_Request(xiaofangService *soap)
{	struct ns__Dispatch_Append_Alert_Request soap_tmp_ns__Dispatch_Append_Alert_Request;
	ns__Dispatch_Append_Alert_Request_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Append_Alert_Request(soap, &soap_tmp_ns__Dispatch_Append_Alert_Request);
	if (!soap_get_ns__Dispatch_Append_Alert_Request(soap, &soap_tmp_ns__Dispatch_Append_Alert_Request, "ns:Dispatch-Append-Alert-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Append_Alert_Request(soap_tmp_ns__Dispatch_Append_Alert_Request.session_id, soap_tmp_ns__Dispatch_Append_Alert_Request.alert, soap_tmp_ns__Dispatch_Append_Alert_Request.members, soap_tmp_ns__Dispatch_Append_Alert_Request.size, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Append-Alert-Request-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Append-Alert-Request-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Modify_Alert_Request(xiaofangService *soap)
{	struct ns__Dispatch_Modify_Alert_Request soap_tmp_ns__Dispatch_Modify_Alert_Request;
	ns__Normal_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Modify_Alert_Request(soap, &soap_tmp_ns__Dispatch_Modify_Alert_Request);
	if (!soap_get_ns__Dispatch_Modify_Alert_Request(soap, &soap_tmp_ns__Dispatch_Modify_Alert_Request, "ns:Dispatch-Modify-Alert-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Modify_Alert_Request(soap_tmp_ns__Dispatch_Modify_Alert_Request.session_id, soap_tmp_ns__Dispatch_Modify_Alert_Request.alert, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Normal-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Normal-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Stop_Alert_Request(xiaofangService *soap)
{	struct ns__Dispatch_Stop_Alert_Request soap_tmp_ns__Dispatch_Stop_Alert_Request;
	ns__Normal_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Stop_Alert_Request(soap, &soap_tmp_ns__Dispatch_Stop_Alert_Request);
	if (!soap_get_ns__Dispatch_Stop_Alert_Request(soap, &soap_tmp_ns__Dispatch_Stop_Alert_Request, "ns:Dispatch-Stop-Alert-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Stop_Alert_Request(soap_tmp_ns__Dispatch_Stop_Alert_Request.session_id, soap_tmp_ns__Dispatch_Stop_Alert_Request.alert_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Normal-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Normal-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Alert_Overed_Notification(xiaofangService *soap)
{	struct ns__Dispatch_Alert_Overed_Notification soap_tmp_ns__Dispatch_Alert_Overed_Notification;
	ns__Dispatch_Alert_Overed_Notification_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Alert_Overed_Notification(soap, &soap_tmp_ns__Dispatch_Alert_Overed_Notification);
	if (!soap_get_ns__Dispatch_Alert_Overed_Notification(soap, &soap_tmp_ns__Dispatch_Alert_Overed_Notification, "ns:Dispatch-Alert-Overed-Notification", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Alert_Overed_Notification(soap_tmp_ns__Dispatch_Alert_Overed_Notification.session_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Alert-Overed-Notification-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Alert-Overed-Notification-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_History_Alert_Request(xiaofangService *soap)
{	struct ns__Dispatch_History_Alert_Request soap_tmp_ns__Dispatch_History_Alert_Request;
	ns__Dispatch_History_Alert_Request_Reponse response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_History_Alert_Request(soap, &soap_tmp_ns__Dispatch_History_Alert_Request);
	if (!soap_get_ns__Dispatch_History_Alert_Request(soap, &soap_tmp_ns__Dispatch_History_Alert_Request, "ns:Dispatch-History-Alert-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_History_Alert_Request(soap_tmp_ns__Dispatch_History_Alert_Request.session_id, soap_tmp_ns__Dispatch_History_Alert_Request.name, soap_tmp_ns__Dispatch_History_Alert_Request.create_time_from, soap_tmp_ns__Dispatch_History_Alert_Request.create_time_to, soap_tmp_ns__Dispatch_History_Alert_Request.alram_time_from, soap_tmp_ns__Dispatch_History_Alert_Request.alram_time_to, soap_tmp_ns__Dispatch_History_Alert_Request.over_time_from, soap_tmp_ns__Dispatch_History_Alert_Request.over_time_to, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-History-Alert-Request-Reponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-History-Alert-Request-Reponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Alert_Request(xiaofangService *soap)
{	struct ns__Dispatch_Alert_Request soap_tmp_ns__Dispatch_Alert_Request;
	ns__Dispatch_Alert_Request_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Alert_Request(soap, &soap_tmp_ns__Dispatch_Alert_Request);
	if (!soap_get_ns__Dispatch_Alert_Request(soap, &soap_tmp_ns__Dispatch_Alert_Request, "ns:Dispatch-Alert-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Alert_Request(soap_tmp_ns__Dispatch_Alert_Request.session_id, soap_tmp_ns__Dispatch_Alert_Request.alert_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-Alert-Request-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-Alert-Request-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_History_Alert_Message_Request(xiaofangService *soap)
{	struct ns__Dispatch_History_Alert_Message_Request soap_tmp_ns__Dispatch_History_Alert_Message_Request;
	ns__Dispatch_History_Alert_Message_Request_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_History_Alert_Message_Request(soap, &soap_tmp_ns__Dispatch_History_Alert_Message_Request);
	if (!soap_get_ns__Dispatch_History_Alert_Message_Request(soap, &soap_tmp_ns__Dispatch_History_Alert_Message_Request, "ns:Dispatch-History-Alert-Message-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_History_Alert_Message_Request(soap_tmp_ns__Dispatch_History_Alert_Message_Request.session_id, soap_tmp_ns__Dispatch_History_Alert_Message_Request.history_alert_id, soap_tmp_ns__Dispatch_History_Alert_Message_Request.from_message_id, soap_tmp_ns__Dispatch_History_Alert_Message_Request.from_time, soap_tmp_ns__Dispatch_History_Alert_Message_Request.max_message_count, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Dispatch-History-Alert-Message-Request-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Dispatch-History-Alert-Message-Request-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__Dispatch_Delete_History_Alert_Request(xiaofangService *soap)
{	struct ns__Dispatch_Delete_History_Alert_Request soap_tmp_ns__Dispatch_Delete_History_Alert_Request;
	ns__Normal_Response response;
	response.soap_default(soap);
	soap_default_ns__Dispatch_Delete_History_Alert_Request(soap, &soap_tmp_ns__Dispatch_Delete_History_Alert_Request);
	if (!soap_get_ns__Dispatch_Delete_History_Alert_Request(soap, &soap_tmp_ns__Dispatch_Delete_History_Alert_Request, "ns:Dispatch-Delete-History-Alert-Request", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Dispatch_Delete_History_Alert_Request(soap_tmp_ns__Dispatch_Delete_History_Alert_Request.session_id, soap_tmp_ns__Dispatch_Delete_History_Alert_Request.history_alert_id, response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || response.soap_put(soap, "ns:Normal-Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || response.soap_put(soap, "ns:Normal-Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
