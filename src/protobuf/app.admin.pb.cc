// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app.admin.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "app.admin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace app {
namespace admin {

namespace {

const ::google::protobuf::Descriptor* LoginRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppendEntityRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppendEntityRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppendEntityResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppendEntityResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModifyEntityRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModifyEntityRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteEntityRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteEntityRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* EntityRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EntityRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* EntityResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EntityResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* EntityNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EntityNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* SystemConfigure_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SystemConfigure_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSystemConfigureResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSystemConfigureResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetSystemConfigureRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetSystemConfigureRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* Indication_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Indication_reflection_ = NULL;
const ::google::protobuf::Descriptor* Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MSG_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_app_2eadmin_2eproto() {
  protobuf_AddDesc_app_2eadmin_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "app.admin.proto");
  GOOGLE_CHECK(file != NULL);
  LoginRequest_descriptor_ = file->message_type(0);
  static const int LoginRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, password_),
  };
  LoginRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LoginRequest_descriptor_,
      LoginRequest::default_instance_,
      LoginRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LoginRequest));
  LoginResponse_descriptor_ = file->message_type(1);
  static const int LoginResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, session_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, self_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, ttl_),
  };
  LoginResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LoginResponse_descriptor_,
      LoginResponse::default_instance_,
      LoginResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LoginResponse));
  AppendEntityRequest_descriptor_ = file->message_type(2);
  static const int AppendEntityRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppendEntityRequest, data_),
  };
  AppendEntityRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppendEntityRequest_descriptor_,
      AppendEntityRequest::default_instance_,
      AppendEntityRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppendEntityRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppendEntityRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppendEntityRequest));
  AppendEntityResponse_descriptor_ = file->message_type(3);
  static const int AppendEntityResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppendEntityResponse, data_),
  };
  AppendEntityResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppendEntityResponse_descriptor_,
      AppendEntityResponse::default_instance_,
      AppendEntityResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppendEntityResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppendEntityResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppendEntityResponse));
  ModifyEntityRequest_descriptor_ = file->message_type(4);
  static const int ModifyEntityRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyEntityRequest, data_),
  };
  ModifyEntityRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ModifyEntityRequest_descriptor_,
      ModifyEntityRequest::default_instance_,
      ModifyEntityRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyEntityRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyEntityRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ModifyEntityRequest));
  DeleteEntityRequest_descriptor_ = file->message_type(5);
  static const int DeleteEntityRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteEntityRequest, id_),
  };
  DeleteEntityRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteEntityRequest_descriptor_,
      DeleteEntityRequest::default_instance_,
      DeleteEntityRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteEntityRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteEntityRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteEntityRequest));
  EntityRequest_descriptor_ = file->message_type(6);
  static const int EntityRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityRequest, id_),
  };
  EntityRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EntityRequest_descriptor_,
      EntityRequest::default_instance_,
      EntityRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EntityRequest));
  EntityResponse_descriptor_ = file->message_type(7);
  static const int EntityResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityResponse, data_),
  };
  EntityResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EntityResponse_descriptor_,
      EntityResponse::default_instance_,
      EntityResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EntityResponse));
  EntityNotification_descriptor_ = file->message_type(8);
  static const int EntityNotification_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityNotification, notify_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityNotification, data_),
  };
  EntityNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EntityNotification_descriptor_,
      EntityNotification::default_instance_,
      EntityNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EntityNotification));
  SystemConfigure_descriptor_ = file->message_type(9);
  static const int SystemConfigure_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemConfigure, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemConfigure, poc_server_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemConfigure, xmd_server_),
  };
  SystemConfigure_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SystemConfigure_descriptor_,
      SystemConfigure::default_instance_,
      SystemConfigure_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemConfigure, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemConfigure, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SystemConfigure));
  GetSystemConfigureResponse_descriptor_ = file->message_type(10);
  static const int GetSystemConfigureResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSystemConfigureResponse, configure_),
  };
  GetSystemConfigureResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSystemConfigureResponse_descriptor_,
      GetSystemConfigureResponse::default_instance_,
      GetSystemConfigureResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSystemConfigureResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSystemConfigureResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSystemConfigureResponse));
  SetSystemConfigureRequest_descriptor_ = file->message_type(11);
  static const int SetSystemConfigureRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSystemConfigureRequest, configure_),
  };
  SetSystemConfigureRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetSystemConfigureRequest_descriptor_,
      SetSystemConfigureRequest::default_instance_,
      SetSystemConfigureRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSystemConfigureRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSystemConfigureRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetSystemConfigureRequest));
  Request_descriptor_ = file->message_type(12);
  static const int Request_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, app_entity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, modify_entity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, delete_entity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, entity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, set_system_configure_),
  };
  Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Request_descriptor_,
      Request::default_instance_,
      Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Request));
  Response_descriptor_ = file->message_type(13);
  static const int Response_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, last_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, error_describe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, append_entity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, entity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, get_system_configure_),
  };
  Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Response_descriptor_,
      Response::default_instance_,
      Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Response));
  Indication_descriptor_ = file->message_type(14);
  static const int Indication_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Indication, entity_),
  };
  Indication_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Indication_descriptor_,
      Indication::default_instance_,
      Indication_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Indication, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Indication, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Indication));
  Message_descriptor_ = file->message_type(15);
  static const int Message_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, msg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, sequence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, session_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, indication_),
  };
  Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Message_descriptor_,
      Message::default_instance_,
      Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Message));
  MSG_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_app_2eadmin_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LoginRequest_descriptor_, &LoginRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LoginResponse_descriptor_, &LoginResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppendEntityRequest_descriptor_, &AppendEntityRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppendEntityResponse_descriptor_, &AppendEntityResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ModifyEntityRequest_descriptor_, &ModifyEntityRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteEntityRequest_descriptor_, &DeleteEntityRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EntityRequest_descriptor_, &EntityRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EntityResponse_descriptor_, &EntityResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EntityNotification_descriptor_, &EntityNotification::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SystemConfigure_descriptor_, &SystemConfigure::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSystemConfigureResponse_descriptor_, &GetSystemConfigureResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetSystemConfigureRequest_descriptor_, &SetSystemConfigureRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Request_descriptor_, &Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Response_descriptor_, &Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Indication_descriptor_, &Indication::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Message_descriptor_, &Message::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_app_2eadmin_2eproto() {
  delete LoginRequest::default_instance_;
  delete LoginRequest_reflection_;
  delete LoginResponse::default_instance_;
  delete LoginResponse_reflection_;
  delete AppendEntityRequest::default_instance_;
  delete AppendEntityRequest_reflection_;
  delete AppendEntityResponse::default_instance_;
  delete AppendEntityResponse_reflection_;
  delete ModifyEntityRequest::default_instance_;
  delete ModifyEntityRequest_reflection_;
  delete DeleteEntityRequest::default_instance_;
  delete DeleteEntityRequest_reflection_;
  delete EntityRequest::default_instance_;
  delete EntityRequest_reflection_;
  delete EntityResponse::default_instance_;
  delete EntityResponse_reflection_;
  delete EntityNotification::default_instance_;
  delete EntityNotification_reflection_;
  delete SystemConfigure::default_instance_;
  delete SystemConfigure_reflection_;
  delete GetSystemConfigureResponse::default_instance_;
  delete GetSystemConfigureResponse_reflection_;
  delete SetSystemConfigureRequest::default_instance_;
  delete SetSystemConfigureRequest_reflection_;
  delete Request::default_instance_;
  delete Request_reflection_;
  delete Response::default_instance_;
  delete Response_reflection_;
  delete Indication::default_instance_;
  delete Indication_reflection_;
  delete Message::default_instance_;
  delete Message_reflection_;
}

void protobuf_AddDesc_app_2eadmin_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pbmsg::protobuf_AddDesc_AppData_2eproto();
  ::pbmsg::protobuf_AddDesc_EntityData_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017app.admin.proto\022\tapp.admin\032\rAppData.pr"
    "oto\032\020EntityData.proto\"2\n\014LoginRequest\022\020\n"
    "\010username\030\001 \002(\014\022\020\n\010password\030\002 \002(\t\"K\n\rLog"
    "inResponse\022\022\n\nsession_id\030\001 \002(\007\022\031\n\004self\030\002"
    " \002(\0132\013.pbmsg.User\022\013\n\003ttl\030\003 \002(\007\"6\n\023Append"
    "EntityRequest\022\037\n\004data\030\001 \002(\0132\021.pbmsg.Enti"
    "tyData\"7\n\024AppendEntityResponse\022\037\n\004data\030\001"
    " \002(\0132\021.pbmsg.EntityData\"6\n\023ModifyEntityR"
    "equest\022\037\n\004data\030\001 \002(\0132\021.pbmsg.EntityData\""
    "0\n\023DeleteEntityRequest\022\031\n\002id\030\001 \002(\0132\r.pbm"
    "sg.Entity\"*\n\rEntityRequest\022\031\n\002id\030\001 \002(\0132\r"
    ".pbmsg.Entity\"1\n\016EntityResponse\022\037\n\004data\030"
    "\001 \002(\0132\021.pbmsg.EntityData\"c\n\022EntityNotifi"
    "cation\022,\n\013notify_type\030\001 \002(\0162\027.pbmsg.Enti"
    "tyNotifyType\022\037\n\004data\030\002 \002(\0132\021.pbmsg.Entit"
    "yData\"I\n\017SystemConfigure\022\016\n\006domain\030\001 \001(\t"
    "\022\022\n\npoc_server\030\002 \001(\t\022\022\n\nxmd_server\030\003 \001(\t"
    "\"K\n\032GetSystemConfigureResponse\022-\n\tconfig"
    "ure\030\001 \002(\0132\032.app.admin.SystemConfigure\"J\n"
    "\031SetSystemConfigureRequest\022-\n\tconfigure\030"
    "\001 \002(\0132\032.app.admin.SystemConfigure\"\301\002\n\007Re"
    "quest\022&\n\005login\030\001 \001(\0132\027.app.admin.LoginRe"
    "quest\0222\n\napp_entity\030\002 \001(\0132\036.app.admin.Ap"
    "pendEntityRequest\0225\n\rmodify_entity\030\003 \001(\013"
    "2\036.app.admin.ModifyEntityRequest\0225\n\rdele"
    "te_entity\030\004 \001(\0132\036.app.admin.DeleteEntity"
    "Request\022(\n\006entity\030\005 \001(\0132\030.app.admin.Enti"
    "tyRequest\022B\n\024set_system_configure\030\006 \001(\0132"
    "$.app.admin.SetSystemConfigureRequest\"\232\002"
    "\n\010Response\022\016\n\006result\030\001 \002(\010\022\025\n\rlast_respo"
    "nse\030\002 \002(\010\022\026\n\016error_describe\030\003 \001(\014\022\'\n\005log"
    "in\030\004 \001(\0132\030.app.admin.LoginResponse\0226\n\rap"
    "pend_entity\030\005 \001(\0132\037.app.admin.AppendEnti"
    "tyResponse\022)\n\006entity\030\006 \001(\0132\031.app.admin.E"
    "ntityResponse\022C\n\024get_system_configure\030\007 "
    "\001(\0132%.app.admin.GetSystemConfigureRespon"
    "se\";\n\nIndication\022-\n\006entity\030\001 \001(\0132\035.app.a"
    "dmin.EntityNotification\"\310\001\n\007Message\022 \n\010m"
    "sg_type\030\001 \002(\0162\016.app.admin.MSG\022\020\n\010sequenc"
    "e\030\002 \002(\007\022\022\n\nsession_id\030\003 \001(\007\022#\n\007request\030\004"
    " \001(\0132\022.app.admin.Request\022%\n\010response\030\005 \001"
    "(\0132\023.app.admin.Response\022)\n\nindication\030\006 "
    "\001(\0132\025.app.admin.Indication*\233\004\n\003MSG\022\023\n\rLo"
    "gin_Request\020\241\215\006\022\024\n\016Login_Response\020\242\215\006\022\024\n"
    "\016Logout_Request\020\243\215\006\022\025\n\017Logout_Response\020\244"
    "\215\006\022\027\n\021Keepalive_Request\020\245\215\006\022\030\n\022Keepalive"
    "_Response\020\246\215\006\022\033\n\025Append_Entity_Request\020\247"
    "\215\006\022\034\n\026Append_Entity_Response\020\250\215\006\022\033\n\025Modi"
    "fy_Entity_Request\020\251\215\006\022\034\n\026Modify_Entity_R"
    "esponse\020\252\215\006\022\033\n\025Delete_Entity_Request\020\253\215\006"
    "\022\034\n\026Delete_Entity_Response\020\254\215\006\022\024\n\016Entity"
    "_Request\020\255\215\006\022\025\n\017Entity_Response\020\256\215\006\022\"\n\034G"
    "et_System_Configure_Request\020\257\215\006\022#\n\035Get_S"
    "ystem_Configure_Response\020\260\215\006\022\"\n\034Set_Syst"
    "em_Configure_Request\020\261\215\006\022#\n\035Set_System_C"
    "onfigure_Response\020\262\215\006\022\031\n\023Entity_Notifica"
    "tion\020\261\333\006", 2248);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "app.admin.proto", &protobuf_RegisterTypes);
  LoginRequest::default_instance_ = new LoginRequest();
  LoginResponse::default_instance_ = new LoginResponse();
  AppendEntityRequest::default_instance_ = new AppendEntityRequest();
  AppendEntityResponse::default_instance_ = new AppendEntityResponse();
  ModifyEntityRequest::default_instance_ = new ModifyEntityRequest();
  DeleteEntityRequest::default_instance_ = new DeleteEntityRequest();
  EntityRequest::default_instance_ = new EntityRequest();
  EntityResponse::default_instance_ = new EntityResponse();
  EntityNotification::default_instance_ = new EntityNotification();
  SystemConfigure::default_instance_ = new SystemConfigure();
  GetSystemConfigureResponse::default_instance_ = new GetSystemConfigureResponse();
  SetSystemConfigureRequest::default_instance_ = new SetSystemConfigureRequest();
  Request::default_instance_ = new Request();
  Response::default_instance_ = new Response();
  Indication::default_instance_ = new Indication();
  Message::default_instance_ = new Message();
  LoginRequest::default_instance_->InitAsDefaultInstance();
  LoginResponse::default_instance_->InitAsDefaultInstance();
  AppendEntityRequest::default_instance_->InitAsDefaultInstance();
  AppendEntityResponse::default_instance_->InitAsDefaultInstance();
  ModifyEntityRequest::default_instance_->InitAsDefaultInstance();
  DeleteEntityRequest::default_instance_->InitAsDefaultInstance();
  EntityRequest::default_instance_->InitAsDefaultInstance();
  EntityResponse::default_instance_->InitAsDefaultInstance();
  EntityNotification::default_instance_->InitAsDefaultInstance();
  SystemConfigure::default_instance_->InitAsDefaultInstance();
  GetSystemConfigureResponse::default_instance_->InitAsDefaultInstance();
  SetSystemConfigureRequest::default_instance_->InitAsDefaultInstance();
  Request::default_instance_->InitAsDefaultInstance();
  Response::default_instance_->InitAsDefaultInstance();
  Indication::default_instance_->InitAsDefaultInstance();
  Message::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_app_2eadmin_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_app_2eadmin_2eproto {
  StaticDescriptorInitializer_app_2eadmin_2eproto() {
    protobuf_AddDesc_app_2eadmin_2eproto();
  }
} static_descriptor_initializer_app_2eadmin_2eproto_;
const ::google::protobuf::EnumDescriptor* MSG_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_descriptor_;
}
bool MSG_IsValid(int value) {
  switch(value) {
    case 100001:
    case 100002:
    case 100003:
    case 100004:
    case 100005:
    case 100006:
    case 100007:
    case 100008:
    case 100009:
    case 100010:
    case 100011:
    case 100012:
    case 100013:
    case 100014:
    case 100015:
    case 100016:
    case 100017:
    case 100018:
    case 110001:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int LoginRequest::kUsernameFieldNumber;
const int LoginRequest::kPasswordFieldNumber;
#endif  // !_MSC_VER

LoginRequest::LoginRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LoginRequest::InitAsDefaultInstance() {
}

LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LoginRequest::SharedCtor() {
  _cached_size_ = 0;
  username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginRequest::~LoginRequest() {
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (this != default_instance_) {
  }
}

void LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginRequest_descriptor_;
}

const LoginRequest& LoginRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

LoginRequest* LoginRequest::default_instance_ = NULL;

LoginRequest* LoginRequest::New() const {
  return new LoginRequest;
}

void LoginRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_username()) {
      if (username_ != &::google::protobuf::internal::kEmptyString) {
        username_->clear();
      }
    }
    if (has_password()) {
      if (password_ != &::google::protobuf::internal::kEmptyString) {
        password_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes username = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_username()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // required string password = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bytes username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->username(), output);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->password(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LoginRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bytes username = 1;
  if (has_username()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->username(), target);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LoginRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes username = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->username());
    }

    // required string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LoginRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_username()) {
      set_username(from.username());
    }
    if (from.has_password()) {
      set_password(from.password());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other != this) {
    std::swap(username_, other->username_);
    std::swap(password_, other->password_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginRequest_descriptor_;
  metadata.reflection = LoginRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LoginResponse::kSessionIdFieldNumber;
const int LoginResponse::kSelfFieldNumber;
const int LoginResponse::kTtlFieldNumber;
#endif  // !_MSC_VER

LoginResponse::LoginResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LoginResponse::InitAsDefaultInstance() {
  self_ = const_cast< ::pbmsg::User*>(&::pbmsg::User::default_instance());
}

LoginResponse::LoginResponse(const LoginResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LoginResponse::SharedCtor() {
  _cached_size_ = 0;
  session_id_ = 0u;
  self_ = NULL;
  ttl_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginResponse::~LoginResponse() {
  SharedDtor();
}

void LoginResponse::SharedDtor() {
  if (this != default_instance_) {
    delete self_;
  }
}

void LoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginResponse_descriptor_;
}

const LoginResponse& LoginResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

LoginResponse* LoginResponse::default_instance_ = NULL;

LoginResponse* LoginResponse::New() const {
  return new LoginResponse;
}

void LoginResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    session_id_ = 0u;
    if (has_self()) {
      if (self_ != NULL) self_->::pbmsg::User::Clear();
    }
    ttl_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed32 session_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &session_id_)));
          set_has_session_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_self;
        break;
      }

      // required .pbmsg.User self = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_self:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_ttl;
        break;
      }

      // required fixed32 ttl = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_ttl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &ttl_)));
          set_has_ttl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required fixed32 session_id = 1;
  if (has_session_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->session_id(), output);
  }

  // required .pbmsg.User self = 2;
  if (has_self()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->self(), output);
  }

  // required fixed32 ttl = 3;
  if (has_ttl()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->ttl(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LoginResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required fixed32 session_id = 1;
  if (has_session_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->session_id(), target);
  }

  // required .pbmsg.User self = 2;
  if (has_self()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->self(), target);
  }

  // required fixed32 ttl = 3;
  if (has_ttl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->ttl(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LoginResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required fixed32 session_id = 1;
    if (has_session_id()) {
      total_size += 1 + 4;
    }

    // required .pbmsg.User self = 2;
    if (has_self()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self());
    }

    // required fixed32 ttl = 3;
    if (has_ttl()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LoginResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_session_id()) {
      set_session_id(from.session_id());
    }
    if (from.has_self()) {
      mutable_self()->::pbmsg::User::MergeFrom(from.self());
    }
    if (from.has_ttl()) {
      set_ttl(from.ttl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_self()) {
    if (!this->self().IsInitialized()) return false;
  }
  return true;
}

void LoginResponse::Swap(LoginResponse* other) {
  if (other != this) {
    std::swap(session_id_, other->session_id_);
    std::swap(self_, other->self_);
    std::swap(ttl_, other->ttl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LoginResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginResponse_descriptor_;
  metadata.reflection = LoginResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AppendEntityRequest::kDataFieldNumber;
#endif  // !_MSC_VER

AppendEntityRequest::AppendEntityRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AppendEntityRequest::InitAsDefaultInstance() {
  data_ = const_cast< ::pbmsg::EntityData*>(&::pbmsg::EntityData::default_instance());
}

AppendEntityRequest::AppendEntityRequest(const AppendEntityRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AppendEntityRequest::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppendEntityRequest::~AppendEntityRequest() {
  SharedDtor();
}

void AppendEntityRequest::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void AppendEntityRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppendEntityRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppendEntityRequest_descriptor_;
}

const AppendEntityRequest& AppendEntityRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

AppendEntityRequest* AppendEntityRequest::default_instance_ = NULL;

AppendEntityRequest* AppendEntityRequest::New() const {
  return new AppendEntityRequest;
}

void AppendEntityRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_data()) {
      if (data_ != NULL) data_->::pbmsg::EntityData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppendEntityRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pbmsg.EntityData data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AppendEntityRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .pbmsg.EntityData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AppendEntityRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .pbmsg.EntityData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AppendEntityRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .pbmsg.EntityData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppendEntityRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppendEntityRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppendEntityRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppendEntityRequest::MergeFrom(const AppendEntityRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::pbmsg::EntityData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppendEntityRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppendEntityRequest::CopyFrom(const AppendEntityRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppendEntityRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void AppendEntityRequest::Swap(AppendEntityRequest* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppendEntityRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppendEntityRequest_descriptor_;
  metadata.reflection = AppendEntityRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AppendEntityResponse::kDataFieldNumber;
#endif  // !_MSC_VER

AppendEntityResponse::AppendEntityResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AppendEntityResponse::InitAsDefaultInstance() {
  data_ = const_cast< ::pbmsg::EntityData*>(&::pbmsg::EntityData::default_instance());
}

AppendEntityResponse::AppendEntityResponse(const AppendEntityResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AppendEntityResponse::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppendEntityResponse::~AppendEntityResponse() {
  SharedDtor();
}

void AppendEntityResponse::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void AppendEntityResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppendEntityResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppendEntityResponse_descriptor_;
}

const AppendEntityResponse& AppendEntityResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

AppendEntityResponse* AppendEntityResponse::default_instance_ = NULL;

AppendEntityResponse* AppendEntityResponse::New() const {
  return new AppendEntityResponse;
}

void AppendEntityResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_data()) {
      if (data_ != NULL) data_->::pbmsg::EntityData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppendEntityResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pbmsg.EntityData data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AppendEntityResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .pbmsg.EntityData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AppendEntityResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .pbmsg.EntityData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AppendEntityResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .pbmsg.EntityData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppendEntityResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppendEntityResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppendEntityResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppendEntityResponse::MergeFrom(const AppendEntityResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::pbmsg::EntityData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppendEntityResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppendEntityResponse::CopyFrom(const AppendEntityResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppendEntityResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void AppendEntityResponse::Swap(AppendEntityResponse* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppendEntityResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppendEntityResponse_descriptor_;
  metadata.reflection = AppendEntityResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ModifyEntityRequest::kDataFieldNumber;
#endif  // !_MSC_VER

ModifyEntityRequest::ModifyEntityRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ModifyEntityRequest::InitAsDefaultInstance() {
  data_ = const_cast< ::pbmsg::EntityData*>(&::pbmsg::EntityData::default_instance());
}

ModifyEntityRequest::ModifyEntityRequest(const ModifyEntityRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ModifyEntityRequest::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ModifyEntityRequest::~ModifyEntityRequest() {
  SharedDtor();
}

void ModifyEntityRequest::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void ModifyEntityRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyEntityRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModifyEntityRequest_descriptor_;
}

const ModifyEntityRequest& ModifyEntityRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

ModifyEntityRequest* ModifyEntityRequest::default_instance_ = NULL;

ModifyEntityRequest* ModifyEntityRequest::New() const {
  return new ModifyEntityRequest;
}

void ModifyEntityRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_data()) {
      if (data_ != NULL) data_->::pbmsg::EntityData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ModifyEntityRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pbmsg.EntityData data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ModifyEntityRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .pbmsg.EntityData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ModifyEntityRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .pbmsg.EntityData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ModifyEntityRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .pbmsg.EntityData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyEntityRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ModifyEntityRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ModifyEntityRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ModifyEntityRequest::MergeFrom(const ModifyEntityRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::pbmsg::EntityData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ModifyEntityRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyEntityRequest::CopyFrom(const ModifyEntityRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyEntityRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void ModifyEntityRequest::Swap(ModifyEntityRequest* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ModifyEntityRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModifyEntityRequest_descriptor_;
  metadata.reflection = ModifyEntityRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteEntityRequest::kIdFieldNumber;
#endif  // !_MSC_VER

DeleteEntityRequest::DeleteEntityRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DeleteEntityRequest::InitAsDefaultInstance() {
  id_ = const_cast< ::pbmsg::Entity*>(&::pbmsg::Entity::default_instance());
}

DeleteEntityRequest::DeleteEntityRequest(const DeleteEntityRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DeleteEntityRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteEntityRequest::~DeleteEntityRequest() {
  SharedDtor();
}

void DeleteEntityRequest::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
  }
}

void DeleteEntityRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteEntityRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteEntityRequest_descriptor_;
}

const DeleteEntityRequest& DeleteEntityRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

DeleteEntityRequest* DeleteEntityRequest::default_instance_ = NULL;

DeleteEntityRequest* DeleteEntityRequest::New() const {
  return new DeleteEntityRequest;
}

void DeleteEntityRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != NULL) id_->::pbmsg::Entity::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteEntityRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pbmsg.Entity id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DeleteEntityRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .pbmsg.Entity id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DeleteEntityRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .pbmsg.Entity id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DeleteEntityRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .pbmsg.Entity id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteEntityRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteEntityRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteEntityRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteEntityRequest::MergeFrom(const DeleteEntityRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      mutable_id()->::pbmsg::Entity::MergeFrom(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteEntityRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteEntityRequest::CopyFrom(const DeleteEntityRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteEntityRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DeleteEntityRequest::Swap(DeleteEntityRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeleteEntityRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteEntityRequest_descriptor_;
  metadata.reflection = DeleteEntityRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EntityRequest::kIdFieldNumber;
#endif  // !_MSC_VER

EntityRequest::EntityRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EntityRequest::InitAsDefaultInstance() {
  id_ = const_cast< ::pbmsg::Entity*>(&::pbmsg::Entity::default_instance());
}

EntityRequest::EntityRequest(const EntityRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EntityRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EntityRequest::~EntityRequest() {
  SharedDtor();
}

void EntityRequest::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
  }
}

void EntityRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntityRequest_descriptor_;
}

const EntityRequest& EntityRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

EntityRequest* EntityRequest::default_instance_ = NULL;

EntityRequest* EntityRequest::New() const {
  return new EntityRequest;
}

void EntityRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != NULL) id_->::pbmsg::Entity::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EntityRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pbmsg.Entity id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EntityRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .pbmsg.Entity id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EntityRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .pbmsg.Entity id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EntityRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .pbmsg.Entity id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EntityRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EntityRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EntityRequest::MergeFrom(const EntityRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      mutable_id()->::pbmsg::Entity::MergeFrom(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EntityRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityRequest::CopyFrom(const EntityRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void EntityRequest::Swap(EntityRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EntityRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EntityRequest_descriptor_;
  metadata.reflection = EntityRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EntityResponse::kDataFieldNumber;
#endif  // !_MSC_VER

EntityResponse::EntityResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EntityResponse::InitAsDefaultInstance() {
  data_ = const_cast< ::pbmsg::EntityData*>(&::pbmsg::EntityData::default_instance());
}

EntityResponse::EntityResponse(const EntityResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EntityResponse::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EntityResponse::~EntityResponse() {
  SharedDtor();
}

void EntityResponse::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void EntityResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntityResponse_descriptor_;
}

const EntityResponse& EntityResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

EntityResponse* EntityResponse::default_instance_ = NULL;

EntityResponse* EntityResponse::New() const {
  return new EntityResponse;
}

void EntityResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_data()) {
      if (data_ != NULL) data_->::pbmsg::EntityData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EntityResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pbmsg.EntityData data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EntityResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .pbmsg.EntityData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EntityResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .pbmsg.EntityData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EntityResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .pbmsg.EntityData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EntityResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EntityResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EntityResponse::MergeFrom(const EntityResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::pbmsg::EntityData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EntityResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityResponse::CopyFrom(const EntityResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void EntityResponse::Swap(EntityResponse* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EntityResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EntityResponse_descriptor_;
  metadata.reflection = EntityResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EntityNotification::kNotifyTypeFieldNumber;
const int EntityNotification::kDataFieldNumber;
#endif  // !_MSC_VER

EntityNotification::EntityNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EntityNotification::InitAsDefaultInstance() {
  data_ = const_cast< ::pbmsg::EntityData*>(&::pbmsg::EntityData::default_instance());
}

EntityNotification::EntityNotification(const EntityNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EntityNotification::SharedCtor() {
  _cached_size_ = 0;
  notify_type_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EntityNotification::~EntityNotification() {
  SharedDtor();
}

void EntityNotification::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void EntityNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntityNotification_descriptor_;
}

const EntityNotification& EntityNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

EntityNotification* EntityNotification::default_instance_ = NULL;

EntityNotification* EntityNotification::New() const {
  return new EntityNotification;
}

void EntityNotification::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    notify_type_ = 0;
    if (has_data()) {
      if (data_ != NULL) data_->::pbmsg::EntityData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EntityNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pbmsg.EntityNotifyType notify_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pbmsg::EntityNotifyType_IsValid(value)) {
            set_notify_type(static_cast< ::pbmsg::EntityNotifyType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // required .pbmsg.EntityData data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EntityNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .pbmsg.EntityNotifyType notify_type = 1;
  if (has_notify_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->notify_type(), output);
  }

  // required .pbmsg.EntityData data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EntityNotification::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .pbmsg.EntityNotifyType notify_type = 1;
  if (has_notify_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->notify_type(), target);
  }

  // required .pbmsg.EntityData data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EntityNotification::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .pbmsg.EntityNotifyType notify_type = 1;
    if (has_notify_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->notify_type());
    }

    // required .pbmsg.EntityData data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityNotification::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EntityNotification* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EntityNotification*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EntityNotification::MergeFrom(const EntityNotification& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_notify_type()) {
      set_notify_type(from.notify_type());
    }
    if (from.has_data()) {
      mutable_data()->::pbmsg::EntityData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EntityNotification::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityNotification::CopyFrom(const EntityNotification& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityNotification::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void EntityNotification::Swap(EntityNotification* other) {
  if (other != this) {
    std::swap(notify_type_, other->notify_type_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EntityNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EntityNotification_descriptor_;
  metadata.reflection = EntityNotification_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SystemConfigure::kDomainFieldNumber;
const int SystemConfigure::kPocServerFieldNumber;
const int SystemConfigure::kXmdServerFieldNumber;
#endif  // !_MSC_VER

SystemConfigure::SystemConfigure()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SystemConfigure::InitAsDefaultInstance() {
}

SystemConfigure::SystemConfigure(const SystemConfigure& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SystemConfigure::SharedCtor() {
  _cached_size_ = 0;
  domain_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  poc_server_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  xmd_server_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SystemConfigure::~SystemConfigure() {
  SharedDtor();
}

void SystemConfigure::SharedDtor() {
  if (domain_ != &::google::protobuf::internal::kEmptyString) {
    delete domain_;
  }
  if (poc_server_ != &::google::protobuf::internal::kEmptyString) {
    delete poc_server_;
  }
  if (xmd_server_ != &::google::protobuf::internal::kEmptyString) {
    delete xmd_server_;
  }
  if (this != default_instance_) {
  }
}

void SystemConfigure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemConfigure::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SystemConfigure_descriptor_;
}

const SystemConfigure& SystemConfigure::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

SystemConfigure* SystemConfigure::default_instance_ = NULL;

SystemConfigure* SystemConfigure::New() const {
  return new SystemConfigure;
}

void SystemConfigure::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_domain()) {
      if (domain_ != &::google::protobuf::internal::kEmptyString) {
        domain_->clear();
      }
    }
    if (has_poc_server()) {
      if (poc_server_ != &::google::protobuf::internal::kEmptyString) {
        poc_server_->clear();
      }
    }
    if (has_xmd_server()) {
      if (xmd_server_ != &::google::protobuf::internal::kEmptyString) {
        xmd_server_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SystemConfigure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string domain = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_poc_server;
        break;
      }

      // optional string poc_server = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_poc_server:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_poc_server()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->poc_server().data(), this->poc_server().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_xmd_server;
        break;
      }

      // optional string xmd_server = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_xmd_server:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xmd_server()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->xmd_server().data(), this->xmd_server().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SystemConfigure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string domain = 1;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->domain(), output);
  }

  // optional string poc_server = 2;
  if (has_poc_server()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->poc_server().data(), this->poc_server().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->poc_server(), output);
  }

  // optional string xmd_server = 3;
  if (has_xmd_server()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->xmd_server().data(), this->xmd_server().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->xmd_server(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SystemConfigure::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string domain = 1;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->domain(), target);
  }

  // optional string poc_server = 2;
  if (has_poc_server()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->poc_server().data(), this->poc_server().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->poc_server(), target);
  }

  // optional string xmd_server = 3;
  if (has_xmd_server()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->xmd_server().data(), this->xmd_server().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->xmd_server(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SystemConfigure::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string domain = 1;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional string poc_server = 2;
    if (has_poc_server()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->poc_server());
    }

    // optional string xmd_server = 3;
    if (has_xmd_server()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->xmd_server());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemConfigure::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SystemConfigure* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SystemConfigure*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SystemConfigure::MergeFrom(const SystemConfigure& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_domain()) {
      set_domain(from.domain());
    }
    if (from.has_poc_server()) {
      set_poc_server(from.poc_server());
    }
    if (from.has_xmd_server()) {
      set_xmd_server(from.xmd_server());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SystemConfigure::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemConfigure::CopyFrom(const SystemConfigure& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemConfigure::IsInitialized() const {

  return true;
}

void SystemConfigure::Swap(SystemConfigure* other) {
  if (other != this) {
    std::swap(domain_, other->domain_);
    std::swap(poc_server_, other->poc_server_);
    std::swap(xmd_server_, other->xmd_server_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SystemConfigure::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SystemConfigure_descriptor_;
  metadata.reflection = SystemConfigure_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetSystemConfigureResponse::kConfigureFieldNumber;
#endif  // !_MSC_VER

GetSystemConfigureResponse::GetSystemConfigureResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetSystemConfigureResponse::InitAsDefaultInstance() {
  configure_ = const_cast< ::app::admin::SystemConfigure*>(&::app::admin::SystemConfigure::default_instance());
}

GetSystemConfigureResponse::GetSystemConfigureResponse(const GetSystemConfigureResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetSystemConfigureResponse::SharedCtor() {
  _cached_size_ = 0;
  configure_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSystemConfigureResponse::~GetSystemConfigureResponse() {
  SharedDtor();
}

void GetSystemConfigureResponse::SharedDtor() {
  if (this != default_instance_) {
    delete configure_;
  }
}

void GetSystemConfigureResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSystemConfigureResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSystemConfigureResponse_descriptor_;
}

const GetSystemConfigureResponse& GetSystemConfigureResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

GetSystemConfigureResponse* GetSystemConfigureResponse::default_instance_ = NULL;

GetSystemConfigureResponse* GetSystemConfigureResponse::New() const {
  return new GetSystemConfigureResponse;
}

void GetSystemConfigureResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_configure()) {
      if (configure_ != NULL) configure_->::app::admin::SystemConfigure::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSystemConfigureResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .app.admin.SystemConfigure configure = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configure()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetSystemConfigureResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .app.admin.SystemConfigure configure = 1;
  if (has_configure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->configure(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetSystemConfigureResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .app.admin.SystemConfigure configure = 1;
  if (has_configure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->configure(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetSystemConfigureResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .app.admin.SystemConfigure configure = 1;
    if (has_configure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->configure());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSystemConfigureResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSystemConfigureResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSystemConfigureResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSystemConfigureResponse::MergeFrom(const GetSystemConfigureResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_configure()) {
      mutable_configure()->::app::admin::SystemConfigure::MergeFrom(from.configure());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSystemConfigureResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSystemConfigureResponse::CopyFrom(const GetSystemConfigureResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSystemConfigureResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetSystemConfigureResponse::Swap(GetSystemConfigureResponse* other) {
  if (other != this) {
    std::swap(configure_, other->configure_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetSystemConfigureResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSystemConfigureResponse_descriptor_;
  metadata.reflection = GetSystemConfigureResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetSystemConfigureRequest::kConfigureFieldNumber;
#endif  // !_MSC_VER

SetSystemConfigureRequest::SetSystemConfigureRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SetSystemConfigureRequest::InitAsDefaultInstance() {
  configure_ = const_cast< ::app::admin::SystemConfigure*>(&::app::admin::SystemConfigure::default_instance());
}

SetSystemConfigureRequest::SetSystemConfigureRequest(const SetSystemConfigureRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SetSystemConfigureRequest::SharedCtor() {
  _cached_size_ = 0;
  configure_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetSystemConfigureRequest::~SetSystemConfigureRequest() {
  SharedDtor();
}

void SetSystemConfigureRequest::SharedDtor() {
  if (this != default_instance_) {
    delete configure_;
  }
}

void SetSystemConfigureRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetSystemConfigureRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetSystemConfigureRequest_descriptor_;
}

const SetSystemConfigureRequest& SetSystemConfigureRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

SetSystemConfigureRequest* SetSystemConfigureRequest::default_instance_ = NULL;

SetSystemConfigureRequest* SetSystemConfigureRequest::New() const {
  return new SetSystemConfigureRequest;
}

void SetSystemConfigureRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_configure()) {
      if (configure_ != NULL) configure_->::app::admin::SystemConfigure::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetSystemConfigureRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .app.admin.SystemConfigure configure = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configure()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SetSystemConfigureRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .app.admin.SystemConfigure configure = 1;
  if (has_configure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->configure(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SetSystemConfigureRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .app.admin.SystemConfigure configure = 1;
  if (has_configure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->configure(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SetSystemConfigureRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .app.admin.SystemConfigure configure = 1;
    if (has_configure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->configure());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetSystemConfigureRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetSystemConfigureRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetSystemConfigureRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetSystemConfigureRequest::MergeFrom(const SetSystemConfigureRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_configure()) {
      mutable_configure()->::app::admin::SystemConfigure::MergeFrom(from.configure());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetSystemConfigureRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSystemConfigureRequest::CopyFrom(const SetSystemConfigureRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSystemConfigureRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetSystemConfigureRequest::Swap(SetSystemConfigureRequest* other) {
  if (other != this) {
    std::swap(configure_, other->configure_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetSystemConfigureRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetSystemConfigureRequest_descriptor_;
  metadata.reflection = SetSystemConfigureRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Request::kLoginFieldNumber;
const int Request::kAppEntityFieldNumber;
const int Request::kModifyEntityFieldNumber;
const int Request::kDeleteEntityFieldNumber;
const int Request::kEntityFieldNumber;
const int Request::kSetSystemConfigureFieldNumber;
#endif  // !_MSC_VER

Request::Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Request::InitAsDefaultInstance() {
  login_ = const_cast< ::app::admin::LoginRequest*>(&::app::admin::LoginRequest::default_instance());
  app_entity_ = const_cast< ::app::admin::AppendEntityRequest*>(&::app::admin::AppendEntityRequest::default_instance());
  modify_entity_ = const_cast< ::app::admin::ModifyEntityRequest*>(&::app::admin::ModifyEntityRequest::default_instance());
  delete_entity_ = const_cast< ::app::admin::DeleteEntityRequest*>(&::app::admin::DeleteEntityRequest::default_instance());
  entity_ = const_cast< ::app::admin::EntityRequest*>(&::app::admin::EntityRequest::default_instance());
  set_system_configure_ = const_cast< ::app::admin::SetSystemConfigureRequest*>(&::app::admin::SetSystemConfigureRequest::default_instance());
}

Request::Request(const Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Request::SharedCtor() {
  _cached_size_ = 0;
  login_ = NULL;
  app_entity_ = NULL;
  modify_entity_ = NULL;
  delete_entity_ = NULL;
  entity_ = NULL;
  set_system_configure_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request::~Request() {
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != default_instance_) {
    delete login_;
    delete app_entity_;
    delete modify_entity_;
    delete delete_entity_;
    delete entity_;
    delete set_system_configure_;
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_descriptor_;
}

const Request& Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

Request* Request::default_instance_ = NULL;

Request* Request::New() const {
  return new Request;
}

void Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_login()) {
      if (login_ != NULL) login_->::app::admin::LoginRequest::Clear();
    }
    if (has_app_entity()) {
      if (app_entity_ != NULL) app_entity_->::app::admin::AppendEntityRequest::Clear();
    }
    if (has_modify_entity()) {
      if (modify_entity_ != NULL) modify_entity_->::app::admin::ModifyEntityRequest::Clear();
    }
    if (has_delete_entity()) {
      if (delete_entity_ != NULL) delete_entity_->::app::admin::DeleteEntityRequest::Clear();
    }
    if (has_entity()) {
      if (entity_ != NULL) entity_->::app::admin::EntityRequest::Clear();
    }
    if (has_set_system_configure()) {
      if (set_system_configure_ != NULL) set_system_configure_->::app::admin::SetSystemConfigureRequest::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .app.admin.LoginRequest login = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_login()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_app_entity;
        break;
      }

      // optional .app.admin.AppendEntityRequest app_entity = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_app_entity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_app_entity()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_modify_entity;
        break;
      }

      // optional .app.admin.ModifyEntityRequest modify_entity = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_modify_entity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modify_entity()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_delete_entity;
        break;
      }

      // optional .app.admin.DeleteEntityRequest delete_entity = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_delete_entity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_delete_entity()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_entity;
        break;
      }

      // optional .app.admin.EntityRequest entity = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_entity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_set_system_configure;
        break;
      }

      // optional .app.admin.SetSystemConfigureRequest set_system_configure = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_set_system_configure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_system_configure()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .app.admin.LoginRequest login = 1;
  if (has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->login(), output);
  }

  // optional .app.admin.AppendEntityRequest app_entity = 2;
  if (has_app_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->app_entity(), output);
  }

  // optional .app.admin.ModifyEntityRequest modify_entity = 3;
  if (has_modify_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->modify_entity(), output);
  }

  // optional .app.admin.DeleteEntityRequest delete_entity = 4;
  if (has_delete_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->delete_entity(), output);
  }

  // optional .app.admin.EntityRequest entity = 5;
  if (has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->entity(), output);
  }

  // optional .app.admin.SetSystemConfigureRequest set_system_configure = 6;
  if (has_set_system_configure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->set_system_configure(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .app.admin.LoginRequest login = 1;
  if (has_login()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->login(), target);
  }

  // optional .app.admin.AppendEntityRequest app_entity = 2;
  if (has_app_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->app_entity(), target);
  }

  // optional .app.admin.ModifyEntityRequest modify_entity = 3;
  if (has_modify_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->modify_entity(), target);
  }

  // optional .app.admin.DeleteEntityRequest delete_entity = 4;
  if (has_delete_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->delete_entity(), target);
  }

  // optional .app.admin.EntityRequest entity = 5;
  if (has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->entity(), target);
  }

  // optional .app.admin.SetSystemConfigureRequest set_system_configure = 6;
  if (has_set_system_configure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->set_system_configure(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .app.admin.LoginRequest login = 1;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->login());
    }

    // optional .app.admin.AppendEntityRequest app_entity = 2;
    if (has_app_entity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->app_entity());
    }

    // optional .app.admin.ModifyEntityRequest modify_entity = 3;
    if (has_modify_entity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->modify_entity());
    }

    // optional .app.admin.DeleteEntityRequest delete_entity = 4;
    if (has_delete_entity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->delete_entity());
    }

    // optional .app.admin.EntityRequest entity = 5;
    if (has_entity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entity());
    }

    // optional .app.admin.SetSystemConfigureRequest set_system_configure = 6;
    if (has_set_system_configure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->set_system_configure());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_login()) {
      mutable_login()->::app::admin::LoginRequest::MergeFrom(from.login());
    }
    if (from.has_app_entity()) {
      mutable_app_entity()->::app::admin::AppendEntityRequest::MergeFrom(from.app_entity());
    }
    if (from.has_modify_entity()) {
      mutable_modify_entity()->::app::admin::ModifyEntityRequest::MergeFrom(from.modify_entity());
    }
    if (from.has_delete_entity()) {
      mutable_delete_entity()->::app::admin::DeleteEntityRequest::MergeFrom(from.delete_entity());
    }
    if (from.has_entity()) {
      mutable_entity()->::app::admin::EntityRequest::MergeFrom(from.entity());
    }
    if (from.has_set_system_configure()) {
      mutable_set_system_configure()->::app::admin::SetSystemConfigureRequest::MergeFrom(from.set_system_configure());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {

  if (has_login()) {
    if (!this->login().IsInitialized()) return false;
  }
  if (has_app_entity()) {
    if (!this->app_entity().IsInitialized()) return false;
  }
  if (has_modify_entity()) {
    if (!this->modify_entity().IsInitialized()) return false;
  }
  if (has_delete_entity()) {
    if (!this->delete_entity().IsInitialized()) return false;
  }
  if (has_entity()) {
    if (!this->entity().IsInitialized()) return false;
  }
  if (has_set_system_configure()) {
    if (!this->set_system_configure().IsInitialized()) return false;
  }
  return true;
}

void Request::Swap(Request* other) {
  if (other != this) {
    std::swap(login_, other->login_);
    std::swap(app_entity_, other->app_entity_);
    std::swap(modify_entity_, other->modify_entity_);
    std::swap(delete_entity_, other->delete_entity_);
    std::swap(entity_, other->entity_);
    std::swap(set_system_configure_, other->set_system_configure_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_descriptor_;
  metadata.reflection = Request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Response::kResultFieldNumber;
const int Response::kLastResponseFieldNumber;
const int Response::kErrorDescribeFieldNumber;
const int Response::kLoginFieldNumber;
const int Response::kAppendEntityFieldNumber;
const int Response::kEntityFieldNumber;
const int Response::kGetSystemConfigureFieldNumber;
#endif  // !_MSC_VER

Response::Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Response::InitAsDefaultInstance() {
  login_ = const_cast< ::app::admin::LoginResponse*>(&::app::admin::LoginResponse::default_instance());
  append_entity_ = const_cast< ::app::admin::AppendEntityResponse*>(&::app::admin::AppendEntityResponse::default_instance());
  entity_ = const_cast< ::app::admin::EntityResponse*>(&::app::admin::EntityResponse::default_instance());
  get_system_configure_ = const_cast< ::app::admin::GetSystemConfigureResponse*>(&::app::admin::GetSystemConfigureResponse::default_instance());
}

Response::Response(const Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Response::SharedCtor() {
  _cached_size_ = 0;
  result_ = false;
  last_response_ = false;
  error_describe_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  login_ = NULL;
  append_entity_ = NULL;
  entity_ = NULL;
  get_system_configure_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response::~Response() {
  SharedDtor();
}

void Response::SharedDtor() {
  if (error_describe_ != &::google::protobuf::internal::kEmptyString) {
    delete error_describe_;
  }
  if (this != default_instance_) {
    delete login_;
    delete append_entity_;
    delete entity_;
    delete get_system_configure_;
  }
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_descriptor_;
}

const Response& Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

Response* Response::default_instance_ = NULL;

Response* Response::New() const {
  return new Response;
}

void Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = false;
    last_response_ = false;
    if (has_error_describe()) {
      if (error_describe_ != &::google::protobuf::internal::kEmptyString) {
        error_describe_->clear();
      }
    }
    if (has_login()) {
      if (login_ != NULL) login_->::app::admin::LoginResponse::Clear();
    }
    if (has_append_entity()) {
      if (append_entity_ != NULL) append_entity_->::app::admin::AppendEntityResponse::Clear();
    }
    if (has_entity()) {
      if (entity_ != NULL) entity_->::app::admin::EntityResponse::Clear();
    }
    if (has_get_system_configure()) {
      if (get_system_configure_ != NULL) get_system_configure_->::app::admin::GetSystemConfigureResponse::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_last_response;
        break;
      }

      // required bool last_response = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last_response:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &last_response_)));
          set_has_last_response();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_error_describe;
        break;
      }

      // optional bytes error_describe = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_error_describe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_error_describe()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_login;
        break;
      }

      // optional .app.admin.LoginResponse login = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_login:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_login()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_append_entity;
        break;
      }

      // optional .app.admin.AppendEntityResponse append_entity = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_append_entity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_append_entity()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_entity;
        break;
      }

      // optional .app.admin.EntityResponse entity = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_entity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_get_system_configure;
        break;
      }

      // optional .app.admin.GetSystemConfigureResponse get_system_configure = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_get_system_configure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_system_configure()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // required bool last_response = 2;
  if (has_last_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->last_response(), output);
  }

  // optional bytes error_describe = 3;
  if (has_error_describe()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->error_describe(), output);
  }

  // optional .app.admin.LoginResponse login = 4;
  if (has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->login(), output);
  }

  // optional .app.admin.AppendEntityResponse append_entity = 5;
  if (has_append_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->append_entity(), output);
  }

  // optional .app.admin.EntityResponse entity = 6;
  if (has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->entity(), output);
  }

  // optional .app.admin.GetSystemConfigureResponse get_system_configure = 7;
  if (has_get_system_configure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->get_system_configure(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // required bool last_response = 2;
  if (has_last_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->last_response(), target);
  }

  // optional bytes error_describe = 3;
  if (has_error_describe()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->error_describe(), target);
  }

  // optional .app.admin.LoginResponse login = 4;
  if (has_login()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->login(), target);
  }

  // optional .app.admin.AppendEntityResponse append_entity = 5;
  if (has_append_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->append_entity(), target);
  }

  // optional .app.admin.EntityResponse entity = 6;
  if (has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->entity(), target);
  }

  // optional .app.admin.GetSystemConfigureResponse get_system_configure = 7;
  if (has_get_system_configure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->get_system_configure(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool result = 1;
    if (has_result()) {
      total_size += 1 + 1;
    }

    // required bool last_response = 2;
    if (has_last_response()) {
      total_size += 1 + 1;
    }

    // optional bytes error_describe = 3;
    if (has_error_describe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->error_describe());
    }

    // optional .app.admin.LoginResponse login = 4;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->login());
    }

    // optional .app.admin.AppendEntityResponse append_entity = 5;
    if (has_append_entity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->append_entity());
    }

    // optional .app.admin.EntityResponse entity = 6;
    if (has_entity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entity());
    }

    // optional .app.admin.GetSystemConfigureResponse get_system_configure = 7;
    if (has_get_system_configure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->get_system_configure());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_last_response()) {
      set_last_response(from.last_response());
    }
    if (from.has_error_describe()) {
      set_error_describe(from.error_describe());
    }
    if (from.has_login()) {
      mutable_login()->::app::admin::LoginResponse::MergeFrom(from.login());
    }
    if (from.has_append_entity()) {
      mutable_append_entity()->::app::admin::AppendEntityResponse::MergeFrom(from.append_entity());
    }
    if (from.has_entity()) {
      mutable_entity()->::app::admin::EntityResponse::MergeFrom(from.entity());
    }
    if (from.has_get_system_configure()) {
      mutable_get_system_configure()->::app::admin::GetSystemConfigureResponse::MergeFrom(from.get_system_configure());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_login()) {
    if (!this->login().IsInitialized()) return false;
  }
  if (has_append_entity()) {
    if (!this->append_entity().IsInitialized()) return false;
  }
  if (has_entity()) {
    if (!this->entity().IsInitialized()) return false;
  }
  if (has_get_system_configure()) {
    if (!this->get_system_configure().IsInitialized()) return false;
  }
  return true;
}

void Response::Swap(Response* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(last_response_, other->last_response_);
    std::swap(error_describe_, other->error_describe_);
    std::swap(login_, other->login_);
    std::swap(append_entity_, other->append_entity_);
    std::swap(entity_, other->entity_);
    std::swap(get_system_configure_, other->get_system_configure_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_descriptor_;
  metadata.reflection = Response_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Indication::kEntityFieldNumber;
#endif  // !_MSC_VER

Indication::Indication()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Indication::InitAsDefaultInstance() {
  entity_ = const_cast< ::app::admin::EntityNotification*>(&::app::admin::EntityNotification::default_instance());
}

Indication::Indication(const Indication& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Indication::SharedCtor() {
  _cached_size_ = 0;
  entity_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Indication::~Indication() {
  SharedDtor();
}

void Indication::SharedDtor() {
  if (this != default_instance_) {
    delete entity_;
  }
}

void Indication::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Indication::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Indication_descriptor_;
}

const Indication& Indication::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

Indication* Indication::default_instance_ = NULL;

Indication* Indication::New() const {
  return new Indication;
}

void Indication::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_entity()) {
      if (entity_ != NULL) entity_->::app::admin::EntityNotification::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Indication::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .app.admin.EntityNotification entity = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Indication::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .app.admin.EntityNotification entity = 1;
  if (has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entity(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Indication::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .app.admin.EntityNotification entity = 1;
  if (has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->entity(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Indication::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .app.admin.EntityNotification entity = 1;
    if (has_entity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entity());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Indication::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Indication* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Indication*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Indication::MergeFrom(const Indication& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_entity()) {
      mutable_entity()->::app::admin::EntityNotification::MergeFrom(from.entity());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Indication::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Indication::CopyFrom(const Indication& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Indication::IsInitialized() const {

  if (has_entity()) {
    if (!this->entity().IsInitialized()) return false;
  }
  return true;
}

void Indication::Swap(Indication* other) {
  if (other != this) {
    std::swap(entity_, other->entity_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Indication::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Indication_descriptor_;
  metadata.reflection = Indication_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Message::kMsgTypeFieldNumber;
const int Message::kSequenceFieldNumber;
const int Message::kSessionIdFieldNumber;
const int Message::kRequestFieldNumber;
const int Message::kResponseFieldNumber;
const int Message::kIndicationFieldNumber;
#endif  // !_MSC_VER

Message::Message()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Message::InitAsDefaultInstance() {
  request_ = const_cast< ::app::admin::Request*>(&::app::admin::Request::default_instance());
  response_ = const_cast< ::app::admin::Response*>(&::app::admin::Response::default_instance());
  indication_ = const_cast< ::app::admin::Indication*>(&::app::admin::Indication::default_instance());
}

Message::Message(const Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Message::SharedCtor() {
  _cached_size_ = 0;
  msg_type_ = 100001;
  sequence_ = 0u;
  session_id_ = 0u;
  request_ = NULL;
  response_ = NULL;
  indication_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Message::~Message() {
  SharedDtor();
}

void Message::SharedDtor() {
  if (this != default_instance_) {
    delete request_;
    delete response_;
    delete indication_;
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_descriptor_;
}

const Message& Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2eadmin_2eproto();
  return *default_instance_;
}

Message* Message::default_instance_ = NULL;

Message* Message::New() const {
  return new Message;
}

void Message::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    msg_type_ = 100001;
    sequence_ = 0u;
    session_id_ = 0u;
    if (has_request()) {
      if (request_ != NULL) request_->::app::admin::Request::Clear();
    }
    if (has_response()) {
      if (response_ != NULL) response_->::app::admin::Response::Clear();
    }
    if (has_indication()) {
      if (indication_ != NULL) indication_->::app::admin::Indication::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .app.admin.MSG msg_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::app::admin::MSG_IsValid(value)) {
            set_msg_type(static_cast< ::app::admin::MSG >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_sequence;
        break;
      }

      // required fixed32 sequence = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_sequence:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &sequence_)));
          set_has_sequence();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_session_id;
        break;
      }

      // optional fixed32 session_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_session_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &session_id_)));
          set_has_session_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_request;
        break;
      }

      // optional .app.admin.Request request = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_response;
        break;
      }

      // optional .app.admin.Response response = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_indication;
        break;
      }

      // optional .app.admin.Indication indication = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_indication:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_indication()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .app.admin.MSG msg_type = 1;
  if (has_msg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msg_type(), output);
  }

  // required fixed32 sequence = 2;
  if (has_sequence()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->sequence(), output);
  }

  // optional fixed32 session_id = 3;
  if (has_session_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->session_id(), output);
  }

  // optional .app.admin.Request request = 4;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->request(), output);
  }

  // optional .app.admin.Response response = 5;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->response(), output);
  }

  // optional .app.admin.Indication indication = 6;
  if (has_indication()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->indication(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .app.admin.MSG msg_type = 1;
  if (has_msg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msg_type(), target);
  }

  // required fixed32 sequence = 2;
  if (has_sequence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->sequence(), target);
  }

  // optional fixed32 session_id = 3;
  if (has_session_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->session_id(), target);
  }

  // optional .app.admin.Request request = 4;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->request(), target);
  }

  // optional .app.admin.Response response = 5;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->response(), target);
  }

  // optional .app.admin.Indication indication = 6;
  if (has_indication()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->indication(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Message::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .app.admin.MSG msg_type = 1;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
    }

    // required fixed32 sequence = 2;
    if (has_sequence()) {
      total_size += 1 + 4;
    }

    // optional fixed32 session_id = 3;
    if (has_session_id()) {
      total_size += 1 + 4;
    }

    // optional .app.admin.Request request = 4;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request());
    }

    // optional .app.admin.Response response = 5;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response());
    }

    // optional .app.admin.Indication indication = 6;
    if (has_indication()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->indication());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msg_type()) {
      set_msg_type(from.msg_type());
    }
    if (from.has_sequence()) {
      set_sequence(from.sequence());
    }
    if (from.has_session_id()) {
      set_session_id(from.session_id());
    }
    if (from.has_request()) {
      mutable_request()->::app::admin::Request::MergeFrom(from.request());
    }
    if (from.has_response()) {
      mutable_response()->::app::admin::Response::MergeFrom(from.response());
    }
    if (from.has_indication()) {
      mutable_indication()->::app::admin::Indication::MergeFrom(from.indication());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_request()) {
    if (!this->request().IsInitialized()) return false;
  }
  if (has_response()) {
    if (!this->response().IsInitialized()) return false;
  }
  if (has_indication()) {
    if (!this->indication().IsInitialized()) return false;
  }
  return true;
}

void Message::Swap(Message* other) {
  if (other != this) {
    std::swap(msg_type_, other->msg_type_);
    std::swap(sequence_, other->sequence_);
    std::swap(session_id_, other->session_id_);
    std::swap(request_, other->request_);
    std::swap(response_, other->response_);
    std::swap(indication_, other->indication_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_descriptor_;
  metadata.reflection = Message_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace admin
}  // namespace app

// @@protoc_insertion_point(global_scope)
